name: build

on:
    push:
        tags:
            - 'v*'
        branches:
            - '**'
        paths:
            - 'x64/.config'
            - 'arm64/.config'
            - '.github/workflows/build.yaml'
            - 'build-ctng.sh'
    workflow_dispatch:

jobs:
    meta:
        uses: ./.github/workflows/meta.yml

    ubuntu:
        # https://github.com/crosstool-ng/crosstool-ng/issues/2358
        # cannot built on latest, aka 24.04
        runs-on: ubuntu-22.04 
        strategy:
            matrix:
                arch: [x64, arm64]
            fail-fast: false
        
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: true

            - name: Update system
              run: |
                  sudo apt-get update
                  sudo apt-get remove --purge firefox
                  sudo apt-get upgrade

            - name: Install deps
              run: |
                  sudo apt-get install -y build-essential automake texinfo flex bison help2man libtool-bin

            - name: Install ctng
              run: |
                  ./build-ctng.sh

            - name: Build toolchain
              run: |
                  cd ${{ matrix.arch }}
                  ../install-ctng/bin/ct-ng build
                  cd ..

            - name: Package toolchain
              run: |
                  tar Jcvf maa-linux-toolchain-${{ matrix.arch }}.tar.xz x-tools

            - name: Upload toolchain
              uses: actions/upload-artifact@v4
              with:
                  name: MaaLinuxToolchain-${{ matrix.arch }}
                  path: maa-linux-toolchain-${{ matrix.arch }}.tar.xz

            - name: Upload logs
              uses: actions/upload-artifact@v4
              if: always()
              with:
                name: MaaLinuxToolchainLogs-${{ matrix.arch }}
                path: ${{ matrix.arch }}/build.log

    release:
        if: ${{ needs.meta.outputs.is_release == 'true' }}
        needs: [meta, ubuntu]
        runs-on: ubuntu-latest
        env:
            OUTPUT_PUBLISH_FAILED: 'echo "failed=true" >> $GITHUB_OUTPUT && echo "::error::Failed to publish packages"'

        steps:
            - uses: actions/download-artifact@v4
              with:
                  path: assets

            - run: |
                  cd assets
                  for f in *; do
                    (cd $f && zip -r ../$f-${{ needs.meta.outputs.tag }}.zip .)
                  done

            - uses: softprops/action-gh-release@v2
              with:
                  files: assets/*.zip
                  tag_name: ${{ needs.meta.outputs.tag }}
                  prerelease: ${{ needs.meta.outputs.is_pre_release == 'true' }}
                  generate_release_notes: true
